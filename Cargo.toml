[package]
name = "edamame_foundation"
version = "0.9.60"
edition = "2021"

[lints.rust]
async_fn_in_trait = "allow"

[features]
default = []
tokio-console = []
packetcapture = [ "flodbadd/packetcapture" ]

[lib]
# Dynamic lib version is not used on apple platforms as it's painful, but we must use it on Windows, Linux and Android
# We must keep lib if we want to build targets with cargo
crate-type = [ "staticlib", "cdylib", "lib" ]

[dependencies]
# Local copy in order to allow rapid development/debug
#edamame_backend = { path = "../edamame_backend" }
edamame_backend = { git = "https://github.com/edamametechnologies/edamame_backend", branch = "main" }
# Local copy in order to allow rapid development/debug
#undeadlock = { path = "../undeadlock" }
undeadlock = { git = "https://github.com/edamametechnologies/undeadlock", branch = "main" }
# Local copy in order to allow rapid development/debug
#flodbadd = { path = "../flodbadd" }
flodbadd = { git = "https://github.com/edamametechnologies/flodbadd", branch = "main" }
# Local copy in order to allow rapid development/debug
#edamame_models = { path = "../edamame_models" }
edamame_models = { git = "https://github.com/edamametechnologies/threatmodels-rs", branch = "main" }

# Sentry
# Beware it will use reqwest with native-tls by default, not rustls
sentry = { version = "0.38.0", default-features = false, features = ["reqwest", "rustls"] }
sentry-tracing = "0.38.0"

# Global statics w/ mutex
lazy_static = "1.5.0"
once_cell = "1.19.0"

# Strum
strum = "0.27.1"
strum_macros = "0.27.1"

# JSON
serde = { version = "1.0.207", features = ["derive"] }
serde_json = "1.0.125"
serde_with = "3.9.0"
uuid = { version = "1.10.0", features = [
    "v4",
    "v5",
    "fast-rng",
    "macro-diagnostics",
]}

# Hashing
sha2 = "0.10.8"
hex = "0.4.3"
# Logging
tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", features = ["env-filter", "fmt"] }
tracing-appender = "0.2.3"
humantime = "2.1.0"

# gRPC server/client
# This uses rustls
tonic = { version = "0.13.0", features = ["_tls-any"] }
# 0.14 has breaking changes
prost = "0.13.5"

base64 = "0.22.1"

# CLI support
run_script = "0.11.0"
powershell_script = "1.1.0"

# Async
async-trait = "0.1.81"
parking_lot = "0.12.3"
futures = "0.3.30"
futures-util = "0.3.30"
tokio = { version = "1.39.2", features = ["full", "tracing"] }
console-subscriber = "0.4.0"
dashmap = "6.0.1"

# Advanced time
chrono = { version = "0.4.38", features = ["serde"] }

# Network utils
socket2 = "0.5.8"
ipnet = "2.9.0"
# mdns discovery that works on all platforms and tolerates foreign language characters
# wez-mdns = "0.1.1"
# Our own mdns implementation forked from wez-mdns
wez-mdns = { git = "https://github.com/edamametechnologies/mdns" }

# Misc
# Contains breaking changes in 0.9.0
rand = "0.8.5"
anyhow = { version = "1.0.86" }
regex = "1.10.6"
sorted-vec = "0.8.3"
encoding_rs = "0.8.34"
thiserror = "2.0.1"
serial_test = "3.1.1"

# Encrypted env (weak)
envcrypt = "0.5.0"

# Not WASI/WASIX/WASM
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]

# Network utils
# See https://github.com/abaumhauer/eui48/issues/29 - warning should be suppressed, but it's not...
eui48 = { version = "1.1.0", features = ["disp_hexstring", "serde"] }
macaddr = { version = "1.0.1", features = ["serde"] }
oui = "0.8.1"
ipnet = "2.9.0"
csv = "1.0.10"
# Prevent reqwest from using native-tls
reqwest = { version = "0.12.5", default-features = false, features = ["gzip", "rustls-tls"] }

# macOS
[target.'cfg(target_os = "macos")'.dependencies]
libc = "0.2.168"

# Android
[target.'cfg(target_os = "android")'.dependencies]
# Native Android tracing
tracing-android = "0.2.0"

[target.'cfg(any(target_os = "macos", target_os = "windows", target_os = "linux"))'.dependencies]
# Not supported on iOS an Android (only implemented in Flutter for those platforms)
network-interface = "2.0.0"

[target.'cfg(any(target_os = "macos", target_os = "linux"))'.dependencies]
users = "0.11.0"
# Arp-toolkit depends on Libpnet, a dependency that is not working on iOS/Android and depends on WinPcap on windows (we use an alternative on Windows)
arp-toolkit = "0.3.2"

# Windows
[target.'cfg(target_os = "windows")'.dependencies]
windows = { version = "0.61.0", features = [ "Data_Xml_Dom", "Win32_Foundation", "Win32_Security", "Win32_System_Threading", "Win32_System_SystemServices", "Win32_UI_WindowsAndMessaging", "Win32_NetworkManagement", "Win32_NetworkManagement_IpHelper", "Win32_Networking", "Win32_Networking_WinSock", "Win32_NetworkManagement_Ndis", "Win32_NetworkManagement_NetManagement" ] }

[dev-dependencies]
serial_test = "3.1.1"

[build-dependencies]
# Conditional compilation for build dependencies
# protobuf->Rust compiler
tonic-build = "0.13.0"
